dist: trusty
sudo: required
language: bash
cache:
  directories:
  - /usr/local
  - $ROOT_PROJECT/terraform/stage
  - $ROOT_PROJECT/terraform/prod
before_install:
#otush checks
  - curl https://raw.githubusercontent.com/express42/otus-homeworks/2018-09/run.sh | bash
  - export ROOT_PROJECT=`pwd`

#install packer
  - cd /usr/local/src
  - sudo wget https://releases.hashicorp.com/packer/1.3.1/packer_1.3.1_linux_386.zip
  - sudo unzip packer_*.zip
  - sudo rm -f packer_*.zip
  - sudo mv /usr/local/src/packer /usr/local/bin/
  - packer -v

#install terraform
  - sudo wget https://releases.hashicorp.com/terraform/0.11.9/terraform_0.11.9_linux_386.zip
  - sudo unzip terraform_*.zip
  - sudo rm -f terraform_*.zip
  - sudo mv /usr/local/src/terraform /usr/local/bin/
  - terraform -v

#install tflint
  - sudo wget https://github.com/wata727/tflint/releases/download/v0.7.2/tflint_linux_386.zip
  - sudo unzip tflint_*.zip
  - sudo rm -f tflint_*.zip
  - sudo mv /usr/local/src/tflint /usr/local/bin/
  - tflint -v

#install ansible
  - sudo pip2 install ansible-lint
  - ansible-lint --version
  - cd $ROOT_PROJECT

script:
# Check packer json files
  - for i in `find packer -name "*.json"`; do echo "Checking file - $i"; packer validate -var-file=packer/variables.json.example $i; done

# Check terraform stage dirs
  - STAGES="stage prod"
  - for i in $STAGES;
    do cd $ROOT_PROJECT/terraform/$i; 
    rm backend.tf;
    mv terraform.tfvars.example terraform.tfvars;
    terraform init;
    terraform validate -check-variables=false;
    tflint;
    done

#Check ansible
  - cd $ROOT_PROJECT/ansible
  - ansible-lint --exclude=roles/jdauphant.nginx playbooks/*.yml
notifications:
  slack:
    rooms:
      secure: ff15CaiJloTeerJb45LZnsFv5k8D9UsLfGmoXJl4LvWr/+M93GlOGNkE9ftAbWJuqLC4pMgeEqTjAUC6DhJwJyWcbASM2IIWsNAnYjpceiKS3pIbApELIvh0fto/l7PEiFa312T3enMIqrnZAo5/iyrEgkq1MJiYWjhl+BxW/f78ks18HysswGZVMlBQop8oZW67fS6p9XqWMjdS0KeXfUYIof4CsRtPTJP/VfW055YpDabG+P3yAR/RkkvVDt3sM/yPgT/p98Z1s93GzWlUbMGH3CFbW+3K4QZqwlgAyRuSKYDRCryZAsGh1i2M8EZYhB3Wpx5mFhZWUWtgvJzuK584jooLazHuEezzA+u7G9buVzFGwLbjLaI/r1ViBzjMSU9YJ5RX+edv7kTztIn+sQzlhdxCbTAQAgBEFquKA01i7eOkHDkXOq13Bg4T0pFE00p51TggGBnss4842nEGjj7u0lOkWh+A02yJfOQZ0dx/DRVl/qLPuPMtHcsUheNewhj9V+NoNiiZKj3qlM1GrY67lb2ujZb2Qmf9rmGy3OoxLswutpw5aqpqyPmGlyxJSqEfVNHM2C9u2D/a9uYMGePhMdFMMbQsDIpou6JB65xuTjfo4NRZ+gTqCboR9hL2Zqytp3DTA7lgz1Zu/CGd5gUXxapo8/qDVSNfdHS6qAo=

